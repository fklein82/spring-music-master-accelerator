#@ load("@ytt:data", "data")

#@ def buildServiceClaimsBinding(usesDB):
#@ if usesDB == True and data.values.dbType == "Postgresql":
  serviceClaims:
    - name: music-database
      ref:
        apiVersion: services.apps.tanzu.vmware.com/v1alpha1
        kind: ResourceClaim
        name: vac-db-binding-compatible
#@ end
#@ end

#@ def buildAppEnv():
#@ if data.values.dbType == "Postgresql":
env:
  - name: SPRING_PROFILES_ACTIVE
    value: postgres
#@ end
#@ end


---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: "Spring Music"
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/name: spring-music
    app.kubernetes.io/part-of: spring-music
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  #@ buildAppEnv()
  serviceAccountName: default
  source:
    git:
      url: https://github.com/fklein82/spring-music-master-accelerator
      ref:
        branch: main
  serviceClaims: #@ buildServiceClaimsBinding(True)
  params:
    - name: annotations
      value:
        autoscaling.knative.dev/minScale: "1"
